// Localization utility for webviews
class LocalizationManager {
    constructor() {
        this.locale = this.getLocale();
        this.strings = this.getLocalizedStrings();
    }

    getLocale() {
        console.log('LocalizationManager: getLocale() called');

        // First check localStorage for user language setting (for webview persistence)
        try {
            const savedSettings = localStorage.getItem('codeTuneSettings');
            if (savedSettings) {
                const settings = JSON.parse(savedSettings);
                console.log('LocalizationManager: localStorage settings:', settings);
                if (settings.language && settings.language !== 'auto') {
                    console.log('LocalizationManager: returning from localStorage:', settings.language);
                    return settings.language;
                }
            }
        } catch (error) {
            console.log('LocalizationManager: error reading localStorage:', error);
        }

        // Check for language in URL parameters (set by extension)
        const urlParams = new URLSearchParams(window.location.search);
        const urlLanguage = urlParams.get('language');
        console.log('LocalizationManager: URL language param:', urlLanguage);
        if (urlLanguage && urlLanguage !== 'auto') {
            console.log('LocalizationManager: returning from URL param:', urlLanguage);
            return urlLanguage;
        }

        // Check for language in global variable set by extension (during language change)
        if (typeof window !== 'undefined' && window.currentLanguage && window.currentLanguage !== 'auto') {
            console.log('LocalizationManager: returning from window.currentLanguage:', window.currentLanguage);
            return window.currentLanguage;
        }

        // Check for VS Code language set by extension in the HTML head
        if (typeof window !== 'undefined' && window.vsCodeLanguage) {
            console.log('LocalizationManager: returning from window.vsCodeLanguage (set by extension):', window.vsCodeLanguage);
            return window.vsCodeLanguage;
        }

        // When auto-detecting, check VS Code's locale via navigator.language
        const vsCodeLocale = navigator.language || 'en';
        console.log('LocalizationManager: auto-detecting, navigator.language:', vsCodeLocale);

        // Map common locales to supported languages
        if (vsCodeLocale.startsWith('ar')) {
            console.log('LocalizationManager: detected Arabic locale, returning: ar');
            return 'ar';
        } else {
            console.log('LocalizationManager: detected non-Arabic locale, returning: en');
            return 'en';
        }
    }

    getLocalizedStrings() {
        const strings = {
            en: {
                // Welcome page
                welcomeTitle: "Assalamu Alaikum! ŸÖÿ±ÿ≠ÿ®ÿßŸã!",
                welcomeSubtitle: "Welcome to CodeTune with Islamic Reminders",
                newFeature: "New Feature: Islamic Reminders & Prayer Times",
                enhanceExperience: "Enhance your coding experience with spiritual reminders and Islamic wisdom",
                hijriDateDisplay: "Hijri Date Display",
                hijriDateDisplayDesc: "View the Islamic calendar date in your activity bar",
                prayerTimeCountdown: "Prayer Time Countdown",
                prayerTimeCountdownDesc: "Real-time countdown to the next prayer time",
                islamicReminders: "Islamic Reminders",
                islamicRemindersDesc: "Receive periodic wisdom from Quran and Hadith",
                fullCustomization: "Full Customization",
                fullCustomizationDesc: "Control reminder frequency and content types",
                sampleReminder: "Sample Reminder",
                prayerType: "Adia (Prayer)",
                openSettings: "Open Settings",
                learnMore: "Learn More",
                gotIt: "Got it!",
                footerText: "May Allah bless your coding journey with peace and productivity",
                footerNote: "This welcome message will only appear for the first 3 days after installation",

                // Settings page
                settingsTitle: "CodeTune Settings",
                customizeExperience: "Customize your CodeTune experience",
                audioSettings: "Audio Settings",
                defaultQuranVolume: "Default Quran Volume",
                volumeDescription: "Set the default volume for Quran recitation (0-100%)",
                defaultReciter: "Default Reciter",
                chooseReciter: "Choose your preferred Quran reciter",
                defaultReciterOption: "Default Reciter",
                abdulrahman: "Abdul Rahman Al-Sudais",
                mishary: "Mishary Rashid Alafasy",
                saud: "Saad Al-Ghamidi",
                audioQuality: "Audio Quality",
                selectQuality: "Select preferred audio quality for streaming",
                lowQuality: "32 kbps (Low)",
                mediumQuality: "64 kbps (Medium)",
                highQuality: "128 kbps (High)",
                bestQuality: "192 kbps (Best)",
                playbackSettings: "Playback Settings",
                defaultPlaybackMode: "Default Playback Mode",
                choosePlayback: "Choose how to play Quran recitations",
                fullSurah: "Full Surah",
                ayahByAyah: "Ayah by Ayah",
                autoPlay: "Auto-play on Startup",
                autoPlayDesc: "Automatically start playing when VS Code opens",
                enableAutoPlay: "Enable auto-play",
                continueLast: "Continue from Last Position",
                continueDesc: "Resume playback from where you left off",
                enableResumePlayback: "Enable resume playback",
                appearanceSettings: "Appearance Settings",
                theme: "Theme",
                chooseTheme: "Choose the visual theme for CodeTune",
                autoFollow: "Auto (Follow VS Code)",
                lightTheme: "Light Theme",
                darkTheme: "Dark Theme",
                compactMode: "Compact Mode",
                compactDesc: "Use a more compact layout to save space",
                showNotifications: "Show Notifications",
                notificationsDesc: "Display notifications for playback events",
                language: "Language",
                chooseLanguage: "Choose the display language for CodeTune",
                languageAuto: "üåê",
                languageEnglish: "EN",
                languageArabic: "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©",
                islamicRemindersTitle: "Islamic Reminders",
                enableReminders: "Enable Reminders",
                remindersDesc: "Receive Islamic reminders and wisdom notifications",
                reminderInterval: "Reminder Interval",
                reminderIntervalDesc: "How often to show Islamic reminders",
                every5Minutes: "Every 5 minutes",
                every15Minutes: "Every 15 minutes",
                every30Minutes: "Every 30 minutes",
                every1Hour: "Every 1 hour",
                every2Hours: "Every 2 hours",
                every4Hours: "Every 4 hours",
                reminderTypes: "Reminder Types",
                reminderTypesDesc: "Choose which types of Islamic content to receive",
                adiaPrayers: "Adia (Islamic Prayers)",
                ahadisSayings: "Ahadis (Prophet's Sayings)",
                islamicWisdom: "Islamic Wisdom",
                morningAzkar: "Morning Azkar (ÿ£ÿ∞ŸÉÿßÿ± ÿßŸÑÿµÿ®ÿßÿ≠)",
                eveningAzkar: "Evening Azkar (ÿ£ÿ∞ŸÉÿßÿ± ÿßŸÑŸÖÿ≥ÿßÿ°)",
                workingHoursOnly: "Working Hours Only",
                workingHoursDesc: "Only show reminders during typical working hours (9 AM - 6 PM)",
                advancedSettings: "Advanced Settings",
                cacheSize: "Cache Size",
                cacheSizeDesc: "Maximum cache size for downloaded audio (MB)",
                downloadTimeout: "Download Timeout",
                downloadTimeoutDesc: "Timeout for audio downloads (seconds)",
                retryAttempts: "Retry Attempts",
                retryAttemptsDesc: "Number of retry attempts for failed downloads",
                settingsSaved: "Settings are automatically saved when you change them. No need to manually save!",
                tipText: "You can also use keyboard shortcuts: Ctrl+Shift+Q to play Quran, and use the activity bar for quick access to your favorite Surahs.",
                saveSettings: "Save Settings",
                resetDefault: "Reset to Default",
                close: "Close",

                // Activity Bar
                codeTune: "CodeTune",
                islamicInformation: "Islamic Information",
                hijriDate: "Hijri Date",
                nextPrayer: "Next Prayer",
                quranPlayer: "Quran Player",
                available: "Available",
                quickAccess: "Quick Access",
                searchSurah: "Search Surah...",
                volume: "Volume",
                chooseSurah: "Choose a Surah to begin recitation",
                browseAll: "Browse All",
                browseAllSurahs: "Browse All Surahs",
                playingSurah: "Playing {surahName} ({arabicName})",
                reciterChanged: "Reciter changed to {reciter}",
                audioQualitySet: "Audio quality set to {quality} kbps",
                welcomeMessage: "Welcome to CodeTune Quran Player! üéµ",
                switchedToLightTheme: "Switched to light theme",
                switchedToDarkTheme: "Switched to dark theme",
                startedPlaying: "Started playing {surahName}",
                playbackError: "Playback error occurred",

                // Common
                loading: "Loading...",
                error: "Error",
                success: "Success",

                // Prayer Names - for localized dynamic display
                prayerFajr: "Fajr",
                prayerDhuhr: "Dhuhr",
                prayerAsr: "Asr",
                prayerMaghrib: "Maghrib",
                prayerIsha: "Isha"
            },
            ar: {
                // Welcome page
                welcomeTitle: "ÿßŸÑÿ≥ŸÑÿßŸÖ ÿπŸÑŸäŸÉŸÖ! ŸÖÿ±ÿ≠ÿ®ÿßŸã!",
                welcomeSubtitle: "ŸÖÿ±ÿ≠ÿ®ÿßŸã ÿ®ŸÉ ŸÅŸä ŸÉŸàÿØ ÿ™ŸäŸàŸÜ ŸÖÿπ ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ©",
                newFeature: "ŸÖŸäÿ≤ÿ© ÿ¨ÿØŸäÿØÿ©: ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ© Ÿàÿ£ŸàŸÇÿßÿ™ ÿßŸÑÿµŸÑÿßÿ©",
                enhanceExperience: "ÿ≠ÿ≥ŸëŸÜ ÿ™ÿ¨ÿ±ÿ®ÿ© ÿßŸÑÿ®ÿ±ŸÖÿ¨ÿ© ÿßŸÑÿÆÿßÿµÿ© ÿ®ŸÉ ŸÖÿπ ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ ÿßŸÑÿ±Ÿàÿ≠Ÿäÿ© ŸàÿßŸÑÿ≠ŸÉŸÖ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ©",
                hijriDateDisplay: "ÿπÿ±ÿ∂ ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑÿ™ŸÇŸàŸäŸÖ ÿßŸÑŸáÿ¨ÿ±Ÿä ŸÅŸä ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÜÿ¥ÿßÿ∑",
                prayerTimeCountdown: "ÿßŸÑÿπÿØ ÿßŸÑÿ™ŸÜÿßÿ≤ŸÑŸä ŸÅŸä ÿßŸÑŸàŸÇÿ™ ÿßŸÑŸÅÿπŸÑŸä ŸÑŸÑÿµŸÑÿßÿ© ÿßŸÑÿ™ÿßŸÑŸäÿ©",
                islamicReminders: "ÿ™ŸÑŸÇŸä ÿßŸÑÿ≠ŸÉŸÖ ÿßŸÑÿØŸàÿ±Ÿäÿ© ŸÖŸÜ ÿßŸÑŸÇÿ±ÿ¢ŸÜ ŸàÿßŸÑÿ≠ÿØŸäÿ´",
                fullCustomization: "ÿßŸÑÿ™ÿ≠ŸÉŸÖ ŸÅŸä ÿ™ÿ±ÿØÿØ ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ Ÿàÿ£ŸÜŸàÿßÿπ ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ",
                sampleReminder: "ÿ™ÿ∞ŸÉŸäÿ± ÿπŸäŸÜÿ©",
                prayerType: "ÿ£ÿØÿπŸäÿ© (ÿßŸÑÿµŸÑÿßÿ©)",
                openSettings: "ŸÅÿ™ÿ≠ ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™",
                learnMore: "ŸÖÿπÿ±ŸÅÿ© ÿßŸÑŸÖÿ≤ŸäÿØ",
                gotIt: "ŸÅŸáŸÖÿ™!",
                footerText: "ÿßŸÑŸÑŸáŸÖ ÿ®ÿßÿ±ŸÉ ÿ±ÿ≠ŸÑÿ™ŸÉ ŸÅŸä ÿßŸÑÿ®ÿ±ŸÖÿ¨ÿ© ÿ®ÿßŸÑÿ≥ŸÑÿßŸÖ ŸàÿßŸÑÿ•ŸÜÿ™ÿßÿ¨Ÿäÿ©",
                footerNote: "ÿ≥Ÿäÿ∏Ÿáÿ± Ÿáÿ∞ÿß ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿßŸÑÿ™ÿ±ÿ≠Ÿäÿ®Ÿäÿ© ŸÅŸÇÿ∑ ŸÑÿ£ŸàŸÑ 3 ÿ£ŸäÿßŸÖ ÿ®ÿπÿØ ÿßŸÑÿ™ÿ´ÿ®Ÿäÿ™",

                // Settings page
                settingsTitle: "ÿ•ÿπÿØÿßÿØÿßÿ™ ŸÉŸàÿØ ÿ™ŸäŸàŸÜ",
                customizeExperience: "ÿ™ÿÆÿµŸäÿµ ÿ™ÿ¨ÿ±ÿ®ÿ™ŸÉ ŸÖÿπ ŸÉŸàÿØ ÿ™ŸäŸàŸÜ",
                audioSettings: "ÿ•ÿπÿØÿßÿØÿßÿ™ ÿßŸÑÿµŸàÿ™",
                defaultQuranVolume: "ŸÖÿ≥ÿ™ŸàŸâ ÿµŸàÿ™ ÿßŸÑŸÇÿ±ÿ¢ŸÜ ÿßŸÑÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä",
                volumeDescription: "ÿ™ÿπŸäŸäŸÜ ŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑÿµŸàÿ™ ÿßŸÑÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä ŸÑÿ™ŸÑÿßŸàÿ© ÿßŸÑŸÇÿ±ÿ¢ŸÜ (0-100%)",
                defaultReciter: "ÿßŸÑŸÇÿßÿ±ÿ¶ ÿßŸÑÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä",
                chooseReciter: "ÿßÿÆÿ™ÿ± ŸÇÿßÿ±ÿ¶ ÿßŸÑŸÇÿ±ÿ¢ŸÜ ÿßŸÑŸÖŸÅÿ∂ŸÑ ŸÑÿØŸäŸÉ",
                defaultReciterOption: "ÿßŸÑŸÇÿßÿ±ÿ¶ ÿßŸÑÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä",
                abdulrahman: "ÿπÿ®ÿØÿßŸÑÿ±ÿ≠ŸÖŸÜ ÿßŸÑÿ≥ÿØŸäÿ≥",
                mishary: "ŸÖÿ¥ÿßÿ±Ÿä ÿ±ÿßÿ¥ÿØ ÿßŸÑÿπŸÅÿßÿ≥Ÿä",
                saud: "ÿ≥ÿπÿØ ÿßŸÑÿ∫ÿßŸÖÿØŸä",
                audioQuality: "ÿ¨ŸàÿØÿ© ÿßŸÑÿµŸàÿ™",
                selectQuality: "ÿßÿÆÿ™ÿ± ÿ¨ŸàÿØÿ© ÿßŸÑÿµŸàÿ™ ÿßŸÑŸÖŸÅÿ∂ŸÑÿ© ŸÑŸÑÿ®ÿ´",
                lowQuality: "32 ŸÉŸäŸÑŸàÿ®ÿ™ ŸÅŸä ÿßŸÑÿ´ÿßŸÜŸäÿ© (ŸÖŸÜÿÆŸÅÿ∂)",
                mediumQuality: "64 ŸÉŸäŸÑŸàÿ®ÿ™ ŸÅŸä ÿßŸÑÿ´ÿßŸÜŸäÿ© (ŸÖÿ™Ÿàÿ≥ÿ∑)",
                highQuality: "128 ŸÉŸäŸÑŸàÿ®ÿ™ ŸÅŸä ÿßŸÑÿ´ÿßŸÜŸäÿ© (ÿπÿßŸÑŸä)",
                bestQuality: "192 ŸÉŸäŸÑŸàÿ®ÿ™ ŸÅŸä ÿßŸÑÿ´ÿßŸÜŸäÿ© (ÿ£ŸÅÿ∂ŸÑ)",
                playbackSettings: "ÿ•ÿπÿØÿßÿØÿßÿ™ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ",
                defaultPlaybackMode: "Ÿàÿ∂ÿπ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä",
                choosePlayback: "ÿßÿÆÿ™ÿ± ŸÉŸäŸÅŸäÿ© ÿ™ÿ¥ÿ∫ŸäŸÑ ÿ™ŸÑÿßŸàÿßÿ™ ÿßŸÑŸÇÿ±ÿ¢ŸÜ",
                fullSurah: "ÿ≥Ÿàÿ±ÿ© ŸÉÿßŸÖŸÑÿ©",
                ayahByAyah: "ÿ¢Ÿäÿ© ÿ¢Ÿäÿ©",
                autoPlay: "ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ™ŸÑŸÇÿßÿ¶Ÿä ÿπŸÜÿØ ÿßŸÑÿ®ÿØÿ°",
                autoPlayDesc: "ÿ®ÿØÿ° ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ÿ™ŸÑŸÇÿßÿ¶ŸäÿßŸã ÿπŸÜÿØ ŸÅÿ™ÿ≠ VS Code",
                enableAutoPlay: "ÿ™ŸÅÿπŸäŸÑ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ™ŸÑŸÇÿßÿ¶Ÿä",
                continueLast: "ÿßŸÑŸÖÿ™ÿßÿ®ÿπÿ© ŸÖŸÜ ÿ¢ÿÆÿ± ŸÖŸàÿ∂ÿπ",
                continueDesc: "ÿßÿ≥ÿ™ÿ¶ŸÜÿßŸÅ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ŸÖŸÜ ÿ≠Ÿäÿ´ ÿ™ŸàŸÇŸÅÿ™",
                enableResumePlayback: "ÿ™ŸÅÿπŸäŸÑ ÿßÿ≥ÿ™ÿ¶ŸÜÿßŸÅ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ",
                appearanceSettings: "ÿ•ÿπÿØÿßÿØÿßÿ™ ÿßŸÑŸÖÿ∏Ÿáÿ±",
                theme: "ÿßŸÑŸÖŸàÿ∂Ÿàÿπ",
                chooseTheme: "ÿßÿÆÿ™ÿ± ÿßŸÑŸÖÿ∏Ÿáÿ± ÿßŸÑÿ®ÿµÿ±Ÿä ŸÑŸÉŸàÿØ ÿ™ŸäŸàŸÜ",
                autoFollow: "ÿ™ŸÑŸÇÿßÿ¶Ÿä (ÿßÿ™ÿ®ÿπ VS Code)",
                lightTheme: "ŸÖŸàÿ∂Ÿàÿπ ŸÅÿßÿ™ÿ≠",
                darkTheme: "ŸÖŸàÿ∂Ÿàÿπ ÿØÿßŸÉŸÜ",
                compactMode: "ÿßŸÑŸàÿ∂ÿπ ÿßŸÑŸÖÿØŸÖÿ¨",
                compactDesc: "ÿßÿ≥ÿ™ÿÆÿØŸÖ ÿ™ÿÆÿ∑Ÿäÿ∑ ÿ£ŸÉÿ´ÿ± ÿ•ÿ≠ŸÉÿßŸÖÿßŸã ŸÑÿ™ŸàŸÅŸäÿ± ÿßŸÑŸÖÿ≥ÿßÿ≠ÿ©",
                showNotifications: "ÿπÿ±ÿ∂ ÿßŸÑÿ•ÿ¥ÿπÿßÿ±ÿßÿ™",
                notificationsDesc: "ÿπÿ±ÿ∂ ÿßŸÑÿ•ÿ¥ÿπÿßÿ±ÿßÿ™ ŸÑÿ≠ÿØÿ´ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ",
                language: "ÿßŸÑŸÑÿ∫ÿ©",
                chooseLanguage: "ÿßÿÆÿ™ÿ± ŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ∂ ŸÑŸÉŸàÿØ ÿ™ŸäŸàŸÜ",
                languageAuto: "üåê",
                languageEnglish: "EN",
                languageArabic: "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©",
                islamicRemindersTitle: "ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ©",
                enableReminders: "ÿ™ŸÅÿπŸäŸÑ ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™",
                remindersDesc: "ÿ™ŸÑŸÇŸä ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ© Ÿàÿ•ÿ¥ÿπÿßÿ±ÿßÿ™ ÿßŸÑÿ≠ŸÉŸÖ",
                reminderInterval: "ŸÅÿ™ÿ±ÿ© ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±",
                reminderIntervalDesc: "ŸÉŸÖ ŸÖÿ±ÿ© ÿ™ÿ∏Ÿáÿ± ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ©",
                every5Minutes: "ŸÉŸÑ 5 ÿØŸÇÿßÿ¶ŸÇ",
                every15Minutes: "ŸÉŸÑ 15 ÿØŸÇŸäŸÇÿ©",
                every30Minutes: "ŸÉŸÑ 30 ÿØŸÇŸäŸÇÿ©",
                every1Hour: "ŸÉŸÑ ÿ≥ÿßÿπÿ©",
                every2Hours: "ŸÉŸÑ ÿ≥ÿßÿπÿ™ŸäŸÜ",
                every4Hours: "ŸÉŸÑ 4 ÿ≥ÿßÿπÿßÿ™",
                reminderTypes: "ÿ£ŸÜŸàÿßÿπ ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™",
                reminderTypesDesc: "ÿßÿÆÿ™ÿ± ÿ£ŸÜŸàÿßÿπ ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸä ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ™ŸÑŸÇŸäŸáÿß",
                adiaPrayers: "ÿßŸÑÿ£ÿØÿπŸäÿ© (ÿßŸÑÿµŸÑŸàÿßÿ™ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ©)",
                ahadisSayings: "ÿßŸÑÿ£ÿ≠ÿßÿØŸäÿ´ (ÿ£ŸÇŸàÿßŸÑ ÿßŸÑŸÜÿ®Ÿä)",
                islamicWisdom: "ÿßŸÑÿ≠ŸÉŸÖ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ©",
                morningAzkar: "ÿ£ÿ∞ŸÉÿßÿ± ÿßŸÑÿµÿ®ÿßÿ≠ (ÿ£ÿ∞ŸÉÿßÿ± ÿßŸÑÿµÿ®ÿßÿ≠)",
                eveningAzkar: "ÿ£ÿ∞ŸÉÿßÿ± ÿßŸÑŸÖÿ≥ÿßÿ° (ÿ£ÿ∞ŸÉÿßÿ± ÿßŸÑŸÖÿ≥ÿßÿ°)",
                workingHoursOnly: "ÿ≥ÿßÿπÿßÿ™ ÿßŸÑÿπŸÖŸÑ ŸÅŸÇÿ∑",
                workingHoursDesc: "ÿπÿ±ÿ∂ ÿßŸÑÿ™ÿ∞ŸÉŸäÿ±ÿßÿ™ ŸÅŸÇÿ∑ ÿÆŸÑÿßŸÑ ÿ≥ÿßÿπÿßÿ™ ÿßŸÑÿπŸÖŸÑ ÿßŸÑŸÖÿπÿ™ÿßÿØÿ© (9 ÿµÿ®ÿßÿ≠ÿßŸã - 6 ŸÖÿ≥ÿßÿ°Ÿã)",
                advancedSettings: "ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™ ÿßŸÑŸÖÿ™ŸÇÿØŸÖÿ©",
                cacheSize: "ÿ≠ÿ¨ŸÖ ÿßŸÑÿ∞ÿßŸÉÿ±ÿ© ÿßŸÑŸÖÿ§ŸÇÿ™ÿ©",
                cacheSizeDesc: "ÿßŸÑÿ≠ÿØ ÿßŸÑÿ£ŸÇÿµŸâ ŸÑÿ≠ÿ¨ŸÖ ÿßŸÑÿ∞ÿßŸÉÿ±ÿ© ÿßŸÑŸÖÿ§ŸÇÿ™ÿ© ŸÑŸÑÿµŸàÿ™ ÿßŸÑŸÖŸèŸÜÿ≤ŸëŸÑ (ŸÖŸäÿ¨ÿßÿ®ÿßŸäÿ™)",
                downloadTimeout: "ŸÖŸáŸÑÿ© ÿßŸÑÿ™ŸÜÿ≤ŸäŸÑ",
                downloadTimeoutDesc: "ŸÖŸáŸÑÿ© ÿ™ŸÜÿ≤ŸäŸÑ ÿßŸÑÿµŸàÿ™ (ÿ´ŸàÿßŸÜŸä)",
                retryAttempts: "ŸÖÿ≠ÿßŸàŸÑÿßÿ™ ÿ•ÿπÿßÿØÿ© ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ©",
                retryAttemptsDesc: "ÿπÿØÿØ ŸÖÿ≠ÿßŸàŸÑÿßÿ™ ÿ•ÿπÿßÿØÿ© ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÑŸÑÿ™ŸÜÿ≤ŸäŸÑÿßÿ™ ÿßŸÑŸÅÿßÿ¥ŸÑÿ©",
                settingsSaved: "Ÿäÿ™ŸÖ ÿ≠ŸÅÿ∏ ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™ ÿ™ŸÑŸÇÿßÿ¶ŸäÿßŸã ÿπŸÜÿØ ÿ™ÿ∫ŸäŸäÿ±Ÿáÿß. ŸÑÿß ÿ≠ÿßÿ¨ÿ© ŸÑÿ≠ŸÅÿ∏Ÿáÿß ŸäÿØŸàŸäÿßŸã!",
                tipText: "ŸäŸÖŸÉŸÜŸÉ ÿ£Ÿäÿ∂ÿßŸã ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßÿÆÿ™ÿµÿßÿ±ÿßÿ™ ŸÑŸàÿ≠ÿ© ÿßŸÑŸÖŸÅÿßÿ™Ÿäÿ≠: Ctrl+Shift+Q ŸÑÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑŸÇÿ±ÿ¢ŸÜÿå Ÿàÿßÿ≥ÿ™ÿÆÿØŸÖ ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÜÿ¥ÿßÿ∑ ŸÑŸÑŸàÿµŸàŸÑ ÿßŸÑÿ≥ÿ±Ÿäÿπ ÿ•ŸÑŸâ ÿßŸÑÿ≥Ÿàÿ± ÿßŸÑŸÖŸÅÿ∂ŸÑÿ© ŸÑÿØŸäŸÉ.",
                saveSettings: "ÿ≠ŸÅÿ∏ ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™",
                resetDefault: "ÿ•ÿπÿßÿØÿ© ÿ™ÿπŸäŸäŸÜ ÿ•ŸÑŸâ ÿßŸÑÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä",
                close: "ÿ•ÿ∫ŸÑÿßŸÇ",

                // Activity Bar
                codeTune: "ŸÉŸàÿØ ÿ™ŸäŸàŸÜ",
                islamicInformation: "ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ•ÿ≥ŸÑÿßŸÖŸäÿ©",
                hijriDate: "ÿßŸÑÿ™ÿßÿ±ŸäÿÆ ÿßŸÑŸáÿ¨ÿ±Ÿä",
                nextPrayer: "ÿßŸÑÿµŸÑÿßÿ© ÿßŸÑÿ™ÿßŸÑŸäÿ©",
                quranPlayer: "ŸÖÿ¥ÿ∫ŸÑ ÿßŸÑŸÇÿ±ÿ¢ŸÜ",
                available: "ŸÖÿ™ÿßÿ≠",
                quickAccess: "ÿßŸÑŸàÿµŸàŸÑ ÿßŸÑÿ≥ÿ±Ÿäÿπ",
                searchSurah: "ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿ≥Ÿàÿ±ÿ©...",
                volume: "ÿßŸÑÿµŸàÿ™",
                chooseSurah: "ÿßÿÆÿ™ÿ± ÿ≥Ÿàÿ±ÿ© ŸÑÿ®ÿØÿ° ÿßŸÑÿ™ŸÑÿßŸàÿ©",
                browseAll: "ÿ™ÿµŸÅÿ≠ ÿßŸÑŸÉŸÑ",
                browseAllSurahs: "ÿ™ÿµŸÅÿ≠ ÿ¨ŸÖŸäÿπ ÿßŸÑÿ≥Ÿàÿ±",
                playingSurah: "ÿ¨ÿßÿ±Ÿç ÿ™ÿ¥ÿ∫ŸäŸÑ {surahName} ({arabicName})",
                reciterChanged: "ÿ™ŸÖ ÿ™ÿ∫ŸäŸäÿ± ÿßŸÑŸÇÿßÿ±ÿ¶ ÿ•ŸÑŸâ {reciter}",
                audioQualitySet: "ÿ™ŸÖ ÿ™ÿπŸäŸäŸÜ ÿ¨ŸàÿØÿ© ÿßŸÑÿµŸàÿ™ ÿ•ŸÑŸâ {quality} ŸÉŸäŸÑŸàÿ®ÿ™ ŸÅŸä ÿßŸÑÿ´ÿßŸÜŸäÿ©",
                welcomeMessage: "ŸÖÿ±ÿ≠ÿ®ÿßŸã ÿ®ŸÉ ŸÅŸä ŸÖÿ¥ÿ∫ŸÑ ÿßŸÑŸÇÿ±ÿ¢ŸÜ ŸÉŸàÿØ ÿ™ŸäŸàŸÜ! üéµ",
                switchedToLightTheme: "ÿ™ŸÖ ÿßŸÑÿ™ÿ®ÿØŸäŸÑ ÿ•ŸÑŸâ ÿßŸÑŸÖŸàÿ∂Ÿàÿπ ÿßŸÑŸÅÿßÿ™ÿ≠",
                switchedToDarkTheme: "ÿ™ŸÖ ÿßŸÑÿ™ÿ®ÿØŸäŸÑ ÿ•ŸÑŸâ ÿßŸÑŸÖŸàÿ∂Ÿàÿπ ÿßŸÑÿØÿßŸÉŸÜ",
                startedPlaying: "ÿ®ÿØÿ£ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ {surahName}",
                playbackError: "ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ",

                // Common
                loading: "ÿ¨ÿßÿ±Ÿç ÿßŸÑÿ™ÿ≠ŸÖŸäŸÑ...",
                error: "ÿÆÿ∑ÿ£",
                success: "ŸÜÿ¨ÿ≠",

                // Prayer Names - for localized dynamic display
                prayerFajr: "ÿßŸÑŸÅÿ¨ÿ±",
                prayerDhuhr: "ÿßŸÑÿ∏Ÿáÿ±",
                prayerAsr: "ÿßŸÑÿπÿµÿ±",
                prayerMaghrib: "ÿßŸÑŸÖÿ∫ÿ±ÿ®",
                prayerIsha: "ÿßŸÑÿπÿ¥ÿßÿ°"
            }
        };

        return strings[this.locale] || strings['en'];
    }

    getString(key, replacements = {}) {
        let string = this.strings[key] || key;
        // Replace placeholders like {surahName} with actual values
        Object.keys(replacements).forEach(placeholder => {
            string = string.replace(new RegExp(`{${placeholder}}`, 'g'), replacements[placeholder]);
        });
        return string;
    }

    // Helper method to localize all elements with data-localize attribute
    localizeElements() {
        const elements = document.querySelectorAll('[data-localize]');
        elements.forEach(element => {
            const key = element.getAttribute('data-localize');
            if (key && this.strings[key]) {
                if (element.tagName === 'INPUT' && element.hasAttribute('placeholder')) {
                    element.setAttribute('placeholder', this.strings[key]);
                } else if (element.tagName === 'OPTION') {
                    element.textContent = this.strings[key];
                } else {
                    element.textContent = this.strings[key];
                }
            }
        });
    }

    // Refresh localization when language changes
    refreshLocalization() {
        console.log('LocalizationManager: refreshLocalization called');
        this.locale = this.getLocale();
        this.strings = this.getLocalizedStrings();
        console.log('LocalizationManager: new locale:', this.locale);
        this.localizeElements();
        console.log('LocalizationManager: localization elements updated');
    }
}

// Global localization instance
window.localization = new LocalizationManager();
